#+TITLE: Proton's Emacs Configuration
** Dependencies
*** EXWM
Since this is a literal *window manager* (seriously, I'm still impressed that emacs can do this), you need the following:
- =xorg-server=
- =alsa-utils=, to control the audio
- =ttf-iosevka=, default font specified in the config, change it in the config for your preferred font of choice.
*** Telega.el
- =telegram-tdlib=, available in the AUR.
*** ERC
Make sure to have a ~/.authinfo file to login to ERC. It can be constructed like this:
#+BEGIN_SRC 
machine irc.server.net login "username" password "password"
#+END_SRC
Replace "username" and "password" with your IRC username and password.
** General Emacs settings
*** Removing backup files and autosave
#+BEGIN_SRC emacs-lisp
  (setq make-backup-files nil)
  (setq auto-save-default nil)
#+END_SRC

*** Inhibiting the startup screen
#+BEGIN_SRC emacs-lisp
  (setq inhibit-startup-screen t)
#+END_SRC

*** Adding an alias for yes/no prompts, setting bash as the default shell
#+BEGIN_SRC emacs-lisp
  (defalias 'yes-or-no-p 'y-or-n-p)
  (defvar default-shell "/bin/bash")
  (defadvice term (before force-bash)
    (interactive (list default-shell)))
  (ad-activate 'term)
#+END_SRC

*** More comfortable line-by-line scrolling
#+BEGIN_SRC emacs-lisp
  (setq scroll-conservatively 100)
#+END_SRC
*** Removing ugly toolbar and menubar from GUI, disabling fringes
#+BEGIN_SRC emacs-lisp
  (tool-bar-mode -1)
  (menu-bar-mode -1)
#+END_SRC

*** Setting line numbers to run solely in programming modes
#+BEGIN_SRC emacs-lisp
  (add-hook 'prog-mode-hook 'display-line-numbers-mode)
#+END_SRC

*** Replace selection with newly-typed text
#+BEGIN_SRC emacs-lisp
  (delete-selection-mode +1)
#+END_SRC
** Visual additions
*** Font
#+BEGIN_SRC emacs-lisp
  (add-to-list 'default-frame-alist
	       '(font . "Iosevka-10"))
#+END_SRC

*** Gotham
#+BEGIN_SRC emacs-lisp
  (use-package gotham-theme
    :ensure t
    :config
    (load-theme 'gotham t))

#+END_SRC
** Org
*** Org bullets
#+BEGIN_SRC emacs-lisp
  (use-package org-bullets
    :ensure t
    :config
    (add-hook 'org-mode-hook (lambda () (org-bullets-mode))))
#+END_SRC
** Keybindings
*** Change undo to C-z
#+BEGIN_SRC emacs-lisp
  (global-unset-key "\C-z")
  (global-set-key "\C-z" 'undo)
#+END_SRC

#+END_SRC
*** Reload configuration
#+BEGIN_SRC emacs-lisp
  (defun config-reload ()
    (interactive)
    (org-babel-load-file (expand-file-name "~/.emacs.d/config.org")))
  (global-set-key (kbd "C-c r") 'config-reload)
#+END_SRC
** Magit
#+BEGIN_SRC emacs-lisp
  (use-package magit
    :ensure t
    :bind ("C-x g" . 'magit-status))
#+END_SRC
** Telega.el
#+BEGIN_SRC emacs-lisp
  (use-package telega
    :ensure t)
#+END_SRC
** ERC
This sets up an IRC client, ERC, connecting to freenode, as well as autojoining #emacs and #exwm. Make sure to replace "username" with your username.
#+BEGIN_SRC emacs-lisp
(setq auth-sources '("~/.authinfo"))
(setq erc-prompt-for-password nil)
;; Keybindings
(defun start-irc ()
"Connect to Freenode, with Emacs."
(interactive)
(erc-tls :server "irc.freenode.net" :port 6697 :nick "username")
(setq erc-autojoin-channels-alist '(("freenode.net" "#emacs" "#exwm"))))
#+END_SRC
